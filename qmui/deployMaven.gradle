apply plugin: 'maven-publish'

publishing {
    publications {
        mavenjava(MavenPublication) {
            groupId project.group
            version project.version
            artifactId project.name
            artifact file("$buildDir/outputs/aar/${project.name}-release.aar")

            //http://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)

                        //If there are any exclusions in dependency
                        if (it.excludeRules.size() > 0) {
                            def exclusionsNode = dependencyNode.appendNode('exclusions')
                            it.excludeRules.each { rule ->
                                def exclusionNode = exclusionsNode.appendNode('exclusion')
                                exclusionNode.appendNode('groupId', rule.group)
                                exclusionNode.appendNode('artifactId', rule.module)
                            }
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "http://192.168.2.105:8908/repository/other/"
            credentials {
                username "void"
                password "void"
            }
        }
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    javadoc { //javadoc 采用 utf-8 编码否则会报“GBK的不可映射字符”错误
        options{
            encoding "UTF-8"
            charSet "UTF-8"
        }
    }
    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}
